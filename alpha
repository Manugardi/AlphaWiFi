	#!/bin/bash
fn_begin()
{
	if [ "$(whoami)" != "root" ]; then #Check if user is root.
		echo "You don't have enough privileges to run this script, try sudo ./alpha"
		exit 1
	fi
	fn_banner #Display banner.
	fn_clean #Clean previous configurations, specially IPTables.
	fn_install #Check if needed applications are installed, if not install them.
	fn_main_menu
}
fn_banner()
{
	echo -e "
 _______  _        _______           _______                   
(  ___  )( \      (  ____ )|\     /|(  ___  )                  
| (   ) || (      | (    )|| )   ( || (   ) |                  
| (___) || |      | (____)|| (___) || (___) |                  
|  ___  || |      |  _____)|  ___  ||  ___  |                  
| (   ) || |      | (      | (   ) || (   ) |                  
| )   ( || (____/\| )      | )   ( || )   ( |                  
|/     \|(_______/|/       |/     \||/     \|                  
	                                                         
	    _______  _______  _       _________ _        _______ 
|\     /|(  ___  )(  ____ \| \    /\|__   __/( (    /|(  ____ \ TM
| )   ( || (   ) || (    \/|  \  / /   ) (   |  \  ( || (    \/
| (___) || (___) || |      |  (_/ /    | |   |   \ | || |      
|  ___  ||  ___  || |      |   _ (     | |   | (\ \) || | ____ 
| (   ) || (   ) || |      |  ( \ \    | |   | | \   || | \_  )
| )   ( || )   ( || (____/\|  /  \ \___) (___| )  \  || (___) |
|/     \||/     \|(_______/|_/    \/\_______/|/    )_)(_______)
	                                                         

http://alphahacking.com/
Twitter: @ABHacking
Developed by @Manugardi
	"
	sleep 1
}

fn_clean()
{
	trap fn_exit INT
	#Clear IPTables
	iptables -F
	iptables -X
	iptables -t nat -F
	iptables -t nat -X
	iptables -t mangle -F
	iptables -t mangle -X
}

fn_install()
{
	#¡IMPORTANTE! AÑADIR LA OPCIÓN DE PREGUNTAR SI YA TIENE INSTALADO ALGÚN SERVIDOR WEB Y SOPORTE PARA OTROS SERVIDORES A PARTE DE APACHE
	echo -e "Checking if necessary applications are installed..." #Apache
	if ! apache_loc="$(type -p "apache2")" || [ -z "$apache_loc" ]; then
		echo -e "Apache is not installed, do you want me to install it? (y/n)"
		read var
		if [[ $var = y || $var = Y ]];then
			apt-get install apache2
		else
			echo -e "Apache must be installed before continue."
			fn_install
		fi
	else
		echo -e "Apache is installed."
	fi

	if ! dhcp_loc="$(type -p "dhcpd")" || [ -z "$dhcp_loc" ]; then #isc-dhcp-server
		echo -e "DHCP Server is not installed, do you want me to install it? (y/n)"
		read var
		if [[ $var = y || $var = Y ]];then
			apt-get install isc-dhcp-server
		else
			echo -e "DHCP Server must be installed before continue."
			fn_install
		fi
	else
		echo -e "DHCP Server is installed."
	fi

	if ! php5_loc="$(type -p "php5")" || [ -z "$php5_loc" ]; then #php5
		echo -e "PHP5 is not installed, do you want me to install it? (y/n)"
		read var
		if [[ $var = y || $var = Y ]];then
			apt-get install php5-common libapache2-mod-php5 php5-cli
		else
			echo -e "PHP5 must be installed before continue."
			fn_install
		fi
	else
		echo -e "PHP5 is installed."
	fi
	sleep 1
}

fn_main_menu()
{
	echo -e "
1) Obtain WiFi key by social engineering.
	"
	read var
	if [[ $var = 1 ]];then
		fn_obtain_key #Function for option 1
	else
		fn_main_menu
	fi
}

fn_obtain_key()
{
	echo "1" > /proc/sys/net/ipv4/ip_forward # Enable kernel forwarding
	fn_choose_interfaces
	echo -e "Do you want to start a scan?(y/n)"
	read var
	if [[ $var = y || $var = Y ]];then
		fn_scan
	else
		


}

#************** Interfaces Functions *******************#
# All functions related with interfaces:                #
# 1.- Interface choosing - fn_choose_interface          #
# 2.- Interface checking - fn_check_interface           #
# 3.- Interface MAC changing - fn_macchanging_interface #
#########################################################
fn_choose_interfaces()
{
	FAPI= # Fake Access Point Interface
	RICI= # Real Internet Conected Interface
	echo -e "Ethernet: "$(ifconfig -a | grep eth | awk '{ print $1 }')                
	echo -e "Wlan: "$(ifconfig -a | grep wlan | awk '{ print $1 }')
	echo -e "Please choose the internet connected interface"
	read RICI
	fn_check_interface $RICI
	echo -e "Change internet connected interface manually, just to avoid problems if running on a virtualmachine."
	echo -e "Wlan: "$(ifconfig -a | grep wlan | awk '{ print $1 }')
	echo -e "Please choose the interface for generating fake ap"
	read FAPI
	if [[ $FAPI = $RICI ]];then
		echo -e "You can't use the same interface twice."
		fn_choose_interface
	else	
		fn_check_interface $FAPI
		fn_macchange_interface $FAPI
		FAPIM=$(airmon-ng start $API|grep enabled|awk '{ print $5"" }'|cut -c -4)
		fn_check_interface $FAPIM
	fi
}

fn_check_interface()
{
	ifconfig $1 &> /dev/null
	if [ $? -ne 0 ];then
		echo -e "Please enter a valid interface."
		sleep 1
		fn_choose_interfaces
	fi
}

fn_macchange_interface()
{
	echo -e "
Please choose an option for changing MAC address to interface $1:

1) Change current one to a random MAC.

2) Change the MAC manually.

3) No, I don't want to change the MAC address.
"
	read var
	case $var in
		1) ifconfig $1 down && macchanger -A $1 && ifconfig $1 up
		;;

		2) echo -e "Please enter the new MAC address"
		read new_mac
		if [[ "$new_mac" =~ ^([0-9a-fA-F]{2}:){5}[0-9a-fA-F]{2}$ ]]; then
			macchanger -m $new_mac $1
		else
			echo -e "Please enter a valid MAC Address"
			fn_macchange_interface $FAPI
		fi
		;;

		3)
		;;

		*) echo -e "Please enter a valid option"
		   fn_macchange_interface $FAPI
		;;
	esac
}
#****************** Scan Functions *********************#
# All functions related with scanning:                  #
# 1.- Scan start - fn_scan                              #
#########################################################

fn_scan()
{
	echo -e "Do you want to start a scan?(y/n)"
	read var
	if [[ $var = y || $var = Y ]];then
		airodump-ng "$FAPIM" 2> /dev/null &
		var=1
		while [[ -n $var ]];do
			echo -e "Press enter for closing scan"
			read var
		done
	else
		fn_scan
	fi
}

#****************** Fake AP Functions ******************#
# All functions related with fake access point:         #
# 1.- Scan start - fn_scan                              #
#########################################################
fn_ap_config()
{
	$FAP_IP="192.168.0.1"
	$FAP_SNM="255.255.255.0"
	$FAP_CH="1"
	$FAP_MUT="1400"
	echo -e "Default configuration
1) My IP 		[$FAP_IP]
2) Subnet Mask	[$FAP_SNM]
3) Channel		[$FAP_CH]

Press C to continue
"
	read var
	case $var in

		1) echo -e "Enter IP address"
		read FAP_IP
		fn_ap_config;;

		2) echo -e "Enter Sub Net Mask"
		read FAP_SNM
		fn_ap_config;;

		3) echo -e "Enter Channel"
		read FAP_CH
		fn_ap_config;;

		c|C)

		*) fn_ap_config;;

}

fn_exit()
{
	fn_clean
	airmon_ng stop $FAPIM
}

fn_begin
